@model Abacus.ViewModel.CartIndexVM

@{
    var search = Session["CartSearch"];

    ViewBag.Title = "Index";

    var iSearch = search as Abacus.Models.Interfaces.ISearchType;
}

<script>
    function SearchOptionChange(option, loadSession) {        
        if (option == "")
        {
            option = document.getElementById("SearchOptions").value;

            // The following checks to see if the user "closes" the Search by pressing the search button again
            var ctrl = document.getElementById('searchButton');
            if (ctrl.getAttribute('aria-expanded')) {
                // Search "closed", set the search filter to none and refresh
                option = 'None';
                document.getElementById("SearchOptions").value = option;
                ExecuteSearch();
            }
        }
        xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                document.getElementById("cart_search_criteria").innerHTML = this.responseText;
            }
        };
        xhttp.open("GET", "/Carts/SearchOptions?type=" + option + "&LoadSession=" + loadSession, true);
        xhttp.send();
    }
    function ExecuteSearch() {
        var option = document.getElementById("SearchOptions").value;
        if (option != "") {
            var data = "";
            if (option != "None") {
                data = document.getElementById(option).value;
                if (data == "")
                    return;
            }
            if (option == "Date")
            {
                var data2 = document.getElementById("Date2").value;
                data += "&value2=" + data2;
            }
            xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    document.getElementById("CartListing").innerHTML = this.responseText;
                    var option = document.getElementById("SearchOptions").value;
                    sessionStorage.setItem("lastCartSearch", option);
                    sessionStorage.setItem("lastSearchResult", this.responseText);
                }
                else {
                    document.getElementById("CartListing").innerHTML = "";
                }
            };
            xhttp.open("GET", "/Carts/ProcessSearch?type=" + option+"&value="+data, true);
            xhttp.send();
        }
    }
</script>
<div class="container">
    <div class="row">
        <h2>Carts</h2>
    </div>
    <div class="row">
        <div class="col-sm-3">
            @Html.ActionLink("New Cart", "Create", null, new { @class = "btn btn-default" })
            <button type="button" class="btn btn-default" data-toggle="collapse" data-target="#searchCarts" id="searchButton" onclick="SearchOptionChange('', false)">Search</button>
        </div>
    </div>

    <div class="collapse" id="searchCarts">
        <div id="SearchBar">
            <br/>
            <div class="col-sm-3">@Html.DropDownList("SearchOptions", Model.SearchOptions, htmlAttributes: new { @class = "form-control", onchange = "SearchOptionChange(this.value, false)" })</div>
            <div class="col-sm-8" id="cart_search_criteria"></div>
            <div><button type="button" class="btn editor-container col-sm-1" data-id="0" data-usertype="buyer" onclick="ExecuteSearch()" data-toggle="modal" data-target="#editor-container">Apply</button></div>
        </div>
    </div>
</div>
<hr/>
<div id="CartListing">
    @Html.Partial("_CartList", Model.Carts)
</div>
<script id="startupScript">
    $(document).ready(function () {
        if (sessionStorage.lastCartSearch) {
            var option = sessionStorage.lastCartSearch;
            if (option != "None")
            { $('#searchCarts').collapse(); }
            document.getElementById('SearchOptions').value = option;
            SearchOptionChange(option, true);
            document.getElementById("CartListing").innerHTML = sessionStorage.lastSearchResult;
        }
    });
</script>

