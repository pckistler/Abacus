@model Abacus.ViewModel.TransactionVM

<script>
    $(document).ready(function () {
        document.getElementById("SellerId").focus();
    });
</script>

@{ 
    var value = "0.0";
}
<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Seller Information</h4>
    </div>
    <div class="modal-body" id="HobbyDBUserForm">
        @using (Ajax.BeginForm("CartTransaction", "Carts", FormMethod.Post, new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            UpdateTargetId = Model.UpdateTargetId,
            OnSuccess = "successTransaction",
            OnFailure = "failureTransaction"
        }, new { id = "TransactionDlg" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)

            @*<input data-val="true" data-val-number="The field Id must be a number." data-val-required="The Id field is required." id="DropDownTarget" name="DropDownTarget" type="hidden" value="@updateTarget">*@


            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.SellerId, htmlAttributes: new { @class = "control-label col-sm-5" })
                    <div class="col-sm-7">
                        @Html.DropDownListFor(m => m.SellerId, Model.Sellers, htmlAttributes: new { @class = "form-control"})
                        @Html.ValidationMessageFor(model => model.SellerId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-sm-5" for="@nameof(Model.ItemsTotal)">Total Items Cost (in $)</label>
                    @*@Html.LabelFor(model => model.ItemsTotal, htmlAttributes: new { @class = "control-label col-sm-4" })*@
                    <div class="col-sm-7">
                        @{ value = string.Format("{0:0.00}", Model.ItemsTotal);}
                        <input class="form-control text-box single-line" data-val="true" data-val-number="Must be a decimal." data-val-required="The field is required." id="@nameof(Model.ItemsTotal)" name="@nameof(Model.ItemsTotal)" type="number" value="@value" step="0.01" min="0.0">
                        @*@Html.EditorFor(model => model.ItemsTotal, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.ItemsTotal, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-sm-5" for="@nameof(Model.ShippingTotal)">Total Shipping Cost (in $)</label>
                    @*@Html.LabelFor(model => model.ShippingTotal, htmlAttributes: new { @class = "control-label col-sm-4" })*@
                    <div class="col-sm-7">
                        @{ value = string.Format("{0:0.00}", Model.ShippingTotal);}
                        <input class="form-control text-box single-line" data-val="true" data-val-number="Must be a decimal." data-val-required="The field is required." id="@nameof(Model.ShippingTotal)" name="@nameof(Model.ShippingTotal)" type="number" value="@value" step="0.01" min="0.0">
                        @*@Html.EditorFor(model => model.ShippingTotal, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.ShippingTotal, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TrackingNumber, htmlAttributes: new { @class = "control-label col-sm-5" })
                    <div class="col-sm-7">
                        @Html.EditorFor(model => model.TrackingNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TrackingNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-4 col-sm-offset-4">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button type="submit" id="approve-btn" class="btn btn-default btn-danger">Save</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $('#approve-btn').click(function () {
            $('#modal-container').modal('hide');
        });
    });
</script>