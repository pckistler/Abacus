@model Abacus.ViewModel.ReportVM
@{
    ViewBag.Title = "Index";
    var year = DateTime.Now.Year;
    var month = DateTime.Now.Month;
    var quarter = (month-1) / 3;
    var cartsYear = Model.Carts.Where(c => c.SaleDate.Year == year).ToList();
    List<List<Abacus.Models.Cart>> carts = new List<List<Abacus.Models.Cart>>();
    carts.Add(Model.Carts.Where(c => (c.SaleDate.Month - 1) / 3 == 0).ToList());
    carts.Add(Model.Carts.Where(c => (c.SaleDate.Month - 1) / 3 == 1).ToList());
    carts.Add(Model.Carts.Where(c => (c.SaleDate.Month - 1) / 3 == 2).ToList());
    carts.Add(Model.Carts.Where(c => (c.SaleDate.Month - 1) / 3 == 3).ToList());
    List<List<Abacus.Models.Payout>> payouts = new List<List<Abacus.Models.Payout>>();
    payouts.Add(Model.Payouts.Where(p => (p.Date.Month - 1) / 3 == 0).ToList());
    payouts.Add(Model.Payouts.Where(p => (p.Date.Month - 1) / 3 == 1).ToList());
    payouts.Add(Model.Payouts.Where(p => (p.Date.Month - 1) / 3 == 2).ToList());
    payouts.Add(Model.Payouts.Where(p => (p.Date.Month - 1) / 3 == 3).ToList());
    var cartMonth = Model.Carts.Where(c => c.SaleDate.Month == month).ToList();
    var payoutMonth = Model.Payouts.Where(p => p.Date.Month == month).ToList();

}

<h2>Report</h2>

<table class="table">
    <thead>
        <tr>
            <th></th>
            <th>Total</th>
            <th>Year to date</th>
            @{
                for (int ii = 0; ii <= quarter; ii++)
                {
                    <th>@string.Format("Q{0}", ii+ 1)</th>
                }
            }
            <th>Month</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Carts</td>
            <td>@Model.Carts.Count()</td>
            <td>@cartsYear.Count()</td>
            @{
                for (int ii = 0; ii <= quarter; ii++)
                {
                    <td>@carts[ii].Count()</td>
                }
            }
            <td>@cartMonth.Count()</td>
        </tr>

        <tr>
            <td>Items sold</td>
            <td>@Model.Carts.Sum(c => c.NumberOfItems)</td>
            <td>@cartsYear.Sum(c => c.NumberOfItems)</td>
            @{
                for (int ii = 0; ii <= quarter; ii++)
                {
                    <td>@carts[ii].Sum(c => c.NumberOfItems)</td>
                }
            }
            <td>@cartMonth.Sum(c => c.NumberOfItems)</td>
        </tr>
        <tr>
            <td>Payouts made</td>
            <td>@Model.Payouts.Count()</td>
            <td>@Model.Payouts.Where(p=>p.Date.Year == year).Count()</td>
            @{
                for (int ii = 0; ii <= quarter; ii++)
                {
                    <td>@payouts[ii].Count</td>
                }
            }
            <td>@payoutMonth.Count</td>
        </tr>
        <tr>
            <td>Payouts amount</td>
            <td>@string.Format("${0:0.00}",Model.Payouts.Sum(c => c.Amount))</td>
            <td>@string.Format("${0:0.00}", Model.Payouts.Where(p => p.Date.Year == year).Sum(c => c.Amount))</td>
            @{
                for (int ii = 0; ii <= quarter; ii++)
                {
                    <td>@string.Format("${0:0.00}", payouts[ii].Sum(p=>p.Amount))</td>
                }
            }
            <td>@string.Format("${0:0.00}", payoutMonth.Sum(c => c.Amount))</td>
        </tr>
        <tr>
            <td>Paypal fees</td>
            <td>@string.Format("${0:0.00}", Model.Transactions.Sum(c => c.PayPalFees))</td>
            <td>@string.Format("${0:0.00}", cartsYear.Sum(c => c.Transactions.Sum(t => t.PayPalFees)))</td>
            @{
                for (int ii = 0; ii <= quarter; ii++)
                {
                    <td>@string.Format("${0:0.00}", carts[ii].Sum(c => c.Transactions.Sum(t => t.PayPalFees)))</td>
                }
            }
            <td>@string.Format("${0:0.00}", cartMonth.Sum(c => c.Transactions.Sum(t => t.PayPalFees)))</td>
        </tr>
        <tr>
            <td>hobbyDB fees</td>
            <td>@string.Format("${0:0.00}", Model.Transactions.Sum(c => c.HobbyDBFees))</td>
            <td>@string.Format("${0:0.00}", cartsYear.Sum(c => c.Transactions.Sum(t => t.HobbyDBFees)))</td>
            @{
                for (int ii = 0; ii <= quarter; ii++)
                {
                    <td>@string.Format("${0:0.00}", carts[ii].Sum(c => c.Transactions.Sum(t => t.HobbyDBFees)))</td>
                }
            }
            <td>@string.Format("${0:0.00}", cartMonth.Sum(c => c.Transactions.Sum(t => t.HobbyDBFees)))</td>
        </tr>
    </tbody>

</table>

