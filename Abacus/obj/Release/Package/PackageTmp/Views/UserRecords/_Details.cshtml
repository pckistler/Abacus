@model Abacus.Models.UserRecord

<div>    
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HDBUserName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HDBUserName)
        </dd>



        <dt>
            @Html.DisplayNameFor(model => model.HDBUserId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.HDBUserId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UserType)
        </dt>

        <dd>
            @{
                string userType = string.Empty;
                if ((Model.UserType & Abacus.Models.UserRecord.UserTypes.Buyer) == Abacus.Models.UserRecord.UserTypes.Buyer)
                {
                    userType = "Buyer";
                }
                if ((Model.UserType & Abacus.Models.UserRecord.UserTypes.Seller) == Abacus.Models.UserRecord.UserTypes.Seller)
                {
                    if (userType != string.Empty) { userType += ", "; }
                    userType += "Seller";
                }
                @userType
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>

        <dt>
            PayPal Email
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PayPalEmail.EmailAddress)
        </dd>

        <dt>
            Email
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PreferredEmail.EmailAddress)
        </dd>
    </dl>

    <dl class="dl-horizontal">
        <dt>
            Total Carts
        </dt>
        <dd>
            @{
                var count = (new Abacus.Models.ApplicationDbContext()).Carts.Where(c => c.Transactions.Any(t=>t.SellerId == Model.Id)).Count();
            }
            @string.Format("{0}", count)
        </dd>
        <dt>
            Total Items Sold
        </dt>
        <dd>
            @{
                var items = Model.Transactions.Where(t => t.SellerId == Model.Id).Sum(x => x.NumOfItems);
            }
            @string.Format("{0}", items)
        </dd>
        <dt>
            Total Sales
        </dt>
        <dd>
            @{
                var amount = Model.Transactions.Where(t => t.SellerId == Model.Id).Sum(x => x.ItemCosts);
            }
            @string.Format("$ {0:0.00}", amount)
        </dd>
        <dt>
            Total Shipping Fees
        </dt>
        <dd>
            @{
                var shippingFees = Model.Transactions.Where(t => t.SellerId == Model.Id).Sum(x => x.ShippingCost);
            }
            @string.Format("$ {0:0.00}", shippingFees)
        </dd>

        <dt>
            Total hobbyDB Fees
        </dt>
        <dd>
            @{
                var hdbFees = Model.Transactions.Where(t => t.SellerId == Model.Id).Sum(x => x.HobbyDBFees);
            }
            @string.Format("$ {0:0.00}", hdbFees)
        </dd>

        <dt>
            Total Payouts Made
        </dt>
        <dd>
            @{
                items = Model.Payouts.Where(t => t.SellerId == Model.Id).Count();
            }
            @string.Format("{0}", items)
        </dd>
        <dt>
            Total Payout Amount
        </dt>
        <dd>
            @{
                amount = Model.Payouts.Where(t => t.SellerId == Model.Id).Sum(p=>p.Amount);
            }
            @string.Format("$ {0:0.00}", amount)
        </dd>
        <dt>
            Last Payout Date
        </dt>
        <dd>
            @{
                var date = Model.Payouts.Where(t => t.SellerId == Model.Id).OrderByDescending(p => p.Date).FirstOrDefault();
            }
            @if (date != null)
            {
                @Html.DisplayFor(m => m.Payouts.Where(t => t.SellerId == Model.Id).OrderByDescending(p => p.Date).First().Date)
            }
        </dd>
    </dl>
</div>