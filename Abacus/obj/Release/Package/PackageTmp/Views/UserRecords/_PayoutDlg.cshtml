@model Abacus.ViewModel.PayoutVM

<script>
    $(document).ready(function () {
        document.getElementById("SellerId").focus();
    });
</script>

@{ 
    var value = "0.0";
}
<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Payout Information</h4>
    </div>
    <div class="modal-body" id="HobbyDBUserForm">
        @using (Ajax.BeginForm("Payout", "UserRecords", FormMethod.Post, new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            UpdateTargetId = Model.Dialog.UpdateTarget,
            OnSuccess = "successPayout",
            OnFailure = "failurePayout"
        }, new { id = "PayoutDlg" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.UserId)

            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-sm-3" })
                    <div class="col-sm-4">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-sm-3" for="@nameof(Model.Amount)">Amount (in $)</label>
                    <div class="col-sm-4">
                        @{ value = string.Format("{0:0.00}", Model.Amount);}
                        <input class="form-control text-box single-line" data-val="true" data-val-number="Must be a decimal." data-val-required="The field is required." id="@nameof(Model.Amount)" name="@nameof(Model.Amount)" type="number" value="@value" step="0.01" min="0.0">
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-4 col-sm-offset-4">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        <button type="submit" id="approve-btn" class="btn btn-default btn-danger">Save</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $('#approve-btn').click(function () {
            $('#modal-container').modal('hide');
        });
    });
</script>